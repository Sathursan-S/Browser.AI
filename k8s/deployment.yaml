apiVersion: apps/v1
kind: Deployment
metadata:
  name: browser-ai-api
  labels:
    app: browser-ai-api
    version: v1
spec:
  replicas: 3
  selector:
    matchLabels:
      app: browser-ai-api
  template:
    metadata:
      labels:
        app: browser-ai-api
    spec:
      containers:
      - name: browser-ai-api
        image: browser-ai:latest
        ports:
        - containerPort: 8000
        env:
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: api-keys
              key: openai-api-key
        - name: ANTHROPIC_API_KEY
          valueFrom:
            secretKeyRef:
              name: api-keys
              key: anthropic-api-key
        - name: BROWSER_AI_LOGGING_LEVEL
          value: "info"
        - name: MLOPS_ENVIRONMENT
          value: "production"
        command: ["python", "-m", "browser_ai_gui.web_app", "--host", "0.0.0.0", "--port", "8000"]
        resources:
          limits:
            cpu: 1000m
            memory: 2Gi
          requests:
            cpu: 500m
            memory: 1Gi
        volumeMounts:
        - name: mlops-data
          mountPath: /app/mlops/data
        - name: model-registry
          mountPath: /app/model_registry
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /ready
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5
      volumes:
      - name: mlops-data
        persistentVolumeClaim:
          claimName: mlops-data-pvc
      - name: model-registry
        persistentVolumeClaim:
          claimName: model-registry-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: browser-ai-api-service
spec:
  selector:
    app: browser-ai-api
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8000
  type: LoadBalancer

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mlops-worker
  labels:
    app: mlops-worker
spec:
  replicas: 2
  selector:
    matchLabels:
      app: mlops-worker
  template:
    metadata:
      labels:
        app: mlops-worker
    spec:
      containers:
      - name: mlops-worker
        image: browser-ai:latest
        env:
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: api-keys
              key: openai-api-key
        - name: ANTHROPIC_API_KEY
          valueFrom:
            secretKeyRef:
              name: api-keys
              key: anthropic-api-key
        - name: BROWSER_AI_LOGGING_LEVEL
          value: "info"
        - name: MLOPS_ENVIRONMENT
          value: "production"
        command: ["python", "-m", "mlops.cli", "monitor", "performance", "--hours", "1"]
        resources:
          limits:
            cpu: 500m
            memory: 1Gi
          requests:
            cpu: 250m
            memory: 512Mi
        volumeMounts:
        - name: mlops-data
          mountPath: /app/mlops/data
        - name: model-registry
          mountPath: /app/model_registry
      volumes:
      - name: mlops-data
        persistentVolumeClaim:
          claimName: mlops-data-pvc
      - name: model-registry
        persistentVolumeClaim:
          claimName: model-registry-pvc

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mlops-data-pvc
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
  storageClassName: fast-ssd

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: model-registry-pvc
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
  storageClassName: fast-ssd

---
apiVersion: v1
kind: Secret
metadata:
  name: api-keys
type: Opaque
data:
  openai-api-key: BASE64_ENCODED_OPENAI_KEY
  anthropic-api-key: BASE64_ENCODED_ANTHROPIC_KEY

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: browser-ai-api-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: browser-ai-api
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80